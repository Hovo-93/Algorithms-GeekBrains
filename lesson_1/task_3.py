"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
import numbers
import heapq

# 1 Сложность этого алгоритма O(n log n )
# Медленнее


company = {
    'OZON': 999,
    'BMW': 800,
    'TESLA': 7000,
    'BOEING': 5000,
    'ZOOM': 9000,
    'Apple': 15000
}

maximum_profit = []
for w in sorted(company.items(), key=lambda x: x[1], reverse=True):
    maximum_profit.append(w)
print(maximum_profit[:3])

# 2.Сложность этого алгоритма  O(N)
# Быстрее
company = {
    'OZON': 999,
    'BMW': 800,
    'TESLA': 7000,
    'BOEING': 5000,
    'ZOOM': 9000,
    'Apple': 15000,
    'Moderna': 32000,
    'Pfizer': 40000
}
max_profit = [value for value in company.values() if isinstance(value, numbers.Number)]
print((heapq.nlargest(3, max_profit)))
