"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Решите через рекурсию. Решение через цикл не принимается. """


def countEvenDigits(num, an_even_numb=0, odd=0):
    if num == 0:
        return an_even_numb, odd
    else:
        lastDigit = num % 10
        firstDigit = num // 10
        if lastDigit % 2 == 0:
            an_even_numb += 1
        else:
            odd += 1
        return countEvenDigits(firstDigit, an_even_numb, odd)


print(countEvenDigits(12243))




